.dataTables_wrapper {
	padding-bottom: 1rem;
	box-shadow: -2px 1px 8px rgb(0 0 0 / 25%);
	border-radius: 0.5rem;

	&[data-overflow="y"] > div:nth-child(2) {
		overflow-x: auto;
	}

	& .dataTables_paginate {
		width: 100%;
		justify-content: center;
		margin-top: 0px;
		padding: 0px;
		padding-top: 1.5rem;
		@include flex-r("", center);

		& > span {
			@include flex-r("", center);
			column-gap: 0.5rem;
			& > .paginate_button {
				&:not(.current) {
					display: none;
				}
			}
			& > .ellipsis {
				display: none;
			}
			/*& > .paginate_button:first-child,
			> .paginate_button:last-child {
				display: none;
			}*/
		}

		& .ellipsis {
			color: var(--text3) !important;
		}

		& .paginate_button {
			margin: 0px;
			border: unset !important;
			border-radius: unset;
			color: var(--text3) !important;
			&:active,
			&:focus,
			&:focus-visible,
			&:hover {
				background: unset;
				outline: unset;
				box-shadow: unset;
			}
			&:hover {
				color: var(--text2) !important;
			}
			&.first,
			&.previous,
			&.next,
			&.last {
				color: var(--text2) !important;
			}
			&.first {
				border-radius: 0.5rem 0 0 0.5rem;
			}
			&.last {
				border-radius: 0 0.5rem 0.5rem 0;
				margin-right: 1rem;
			}

			&.disabled {
				color: var(--text4) !important;
				&:hover {
					color: var(--text4) !important;
				}
			}

			&.current {
				background: unset;
				color: var(--text2);
				font-weight: 600;
				&:hover {
					background: unset;
				}
			}
		}
	}
}

.dtToolBar {
	display: grid;
	background-color: var(--dt-background);
	padding: 0.5rem;
	border-radius: 0.5rem 0.5rem 0 0;
	grid-template-areas:
		"info info info"
		"search search search"
		"btnAdd btnFilter btnExport";
	column-gap: 0.5rem;
	row-gap: 1rem;
	grid-auto-rows: 1fr;

	& > .dtAdd > span,
	& > .dtFilters > span,
	& > .dtExports > .dropdown-toggle > span {
		display: none;
	}

	& > .dtInfo {
		grid-area: info;
		justify-content: space-between;
	}

	& .dataTables_length select,
	& .dataTables_filter input {
		background-color: var(--text1);
	}

	& > .dataTables_filter {
		grid-area: search;
		justify-content: center;
		margin: 0px;
		min-height: 34px;
		/*padding: 0.25rem 1rem;*/
		& > label {
			font-weight: bold;
			color: var(--text1);
			position: relative;
			height: 100%;
			width: clamp(200px, 100%, 250px);
			& > i {
				position: absolute;
				top: 50%;
				left: 10px;
				transform: translateY(-50%);
				color: var(--text3);
				font-size: 1rem;
				font-weight: 600;
			}
		}
	}

	& .dataTables_info {
		color: var(--text1);
		font-weight: 600;
	}

	& .dataTables_info,
	& .dataTables_filter input {
		margin: 0px !important;
		padding: 0px !important;
		float: unset;
		border: unset;
		text-decoration: none;
	}

	& .dataTables_filter input {
		height: 100%;
		border: 0.075rem solid transparent;
		padding: 0.25rem 0.5rem 0.25rem 2.15rem !important;
		/*box-shadow: 0.25px 0.25px 0.25px rgba(0, 0, 0, 0.25), 0px 0.25px 0.25px 0.25px rgba(0, 0, 0, 0.25);*/
	}

	& > .dtAdd {
		grid-area: btnAdd;
		justify-self: flex-end;
		& > i {
			color: var(--skirret-green);
		}
	}

	& > .dtFilters {
		grid-area: btnFilter;
		justify-self: center;
		& > i {
			color: var(--nasturcian-flower);
		}
	}

	& > .dtExports {
		grid-area: btnExport;
		justify-self: flex-start;
		& > .dropdown-toggle > i {
			color: var(--pico-void);
		}
		& > .dropdown-menu {
			padding: 1rem 0.5rem;
		}
		& > .dropdown-menu > button {
			min-height: 2.5rem;
			border: 0;
			background-color: transparent;
			background: unset;
			padding: 0.25rem 1rem;
			margin-bottom: 0;

			&:not(:last-child) {
				margin-bottom: 1rem;
			}

			&:hover {
				background-color: rgba(0, 0, 0, 0.15);
			}
			& i {
				font-size: 1rem;
			}
			&.buttons-excel i {
				color: #207345;
				font-weight: 900;
			}
			&.buttons-pdf i {
				color: #d50a0a;
				font-weight: 900;
			}
			&.buttons-print i {
				color: #4b89c6;
				font-weight: 900;
			}
		}
	}

	& :is(.dtInfo, .dataTables_filter, .dataTables_filter > label, .dtAdd, .dtFilters, .dtExports, .dtExports .dropdown-toggle, .dtExports .dt-button, .dtExports .dt-button > span) {
		@include flex-r("", center);
		column-gap: 0.5rem;
	}

	& :is(.dtAdd, .dtFilters, .dtExports) {
		background-color: var(--text1);
		border-radius: 0.25rem;
		padding: 0.5rem 1.5rem;
		cursor: pointer;
		font-weight: 600;
		& > i,
		& .dropdown-toggle > i {
			font-size: 1rem;
		}
	}
}

.dt {
	border-radius: 0.5rem;
	padding: 0rem !important;
	box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);

	&.print-table {
		& > thead > tr > th:first-child,
		& > tbody > tr > td:first-child {
			padding-left: 10px;
		}
	}

	& > thead > tr {
		position: relative;
		color: var(--text1);
		font-weight: bold;
		box-shadow: inset 0 -0.175rem 0 0 rgba(0, 0, 0, 0.175);
		& > th {
			background-color: var(--dt-background);
			padding: 8px 10px;
			&:first-child {
				padding-left: 40px;
			}
		}
	}

	& tr:not([class^="child"]):not(.dtLoading) {
		height: 3rem;
	}

	& tr.dtLoading,
	& tr.dtLoading * {
		margin: 0px;
		padding: 0px;
		height: 0px;
		z-index: 2;
	}

	& tr.dtLoading > td > div {
		position: absolute;
		top: 0px;
		left: 0px;
		width: 100%;
		height: 100%;
		background-color: var(--loading-spinner-backdrop);
		@include flex-c(center, center);
	}

	& > tbody {
		position: relative;
		& > tr {
			&:not(.child:last-child) {
				box-shadow: inset 0 -0.07rem 0 0 var(--dt-row-border-bottom);
			}
			&:not(.dtLoading) {
				&:hover {
					background-color: var(--dt-row-hover);
					z-index: 1;
				}
				&:last-child:hover {
					border-radius: 0 0 0.5rem 0.5rem;
				}
			}

			& > .dtRowsActions {
				& .dropdown-toggle {
					padding: 0.45rem 0.75rem;
					@include flex-c("", center);
					cursor: pointer;
					row-gap: 0.2rem;

					&::before,
					&::after {
						display: none;
					}

					& > i {
						color: var(--dt-row-dropdown-toggle);
					}
				}
				& .dropdown-menu {
					padding: 1rem 0.5rem;
					& > .dropdown-item {
						@include flex-r(flex-start, center);
						column-gap: 0.5rem;
						cursor: pointer;
						min-height: 2.5rem;
						background-color: transparent;
						background: unset;
						padding: 0.25rem 1rem;
						font-weight: 600;
						&[data-cmd="Delete"] > i {
							/*color: var(--nasturcian-flower);*/
							font-size: 1rem;
							min-width: 16.5px;
						}
						&[data-cmd="Edit"] > i {
							/*color: var(--skirret-green);*/
							font-size: 1rem;
							min-width: 16.5px;
						}
					}
				}
			}
		}
	}
}

table {
	&.dataTable {
		margin: 0px !important;
		max-width: unset !important;
		width: 100% !important;

		&.no-footer {
			border-bottom: unset !important;
		}

		&.dt {
			& thead {
				& :is(th, td) {
					border-bottom: 1px solid transparent;
				}

				& :is(.sorting, .sorting_desc, .sorting_asc) {
					background-image: unset !important;
					position: relative;
				}
				& .sorting {
					padding-right: 1.75rem;
					&::after,
					&::before {
						position: absolute;
						top: 50%;
						right: 5px;
						transform: translateY(-50%);
						font-size: 1.25rem;
						color: rgba(255, 255, 255);
						font-weight: 400;
						opacity: 0;
					}
					&:before {
						content: "\2193";
					}
					&:after {
						content: "\2191";
					}
				}

				& .sorting_desc::before,
				& .sorting_asc::after {
					opacity: 1;
				}
			}
			&.dtr-inline.collapsed > tbody > tr :is(td.dtr-control, th.dtr-control) {
				padding-left: 40px;
				&::before {
					content: "";
					width: 1.85em;
					height: 1.85em;
					box-sizing: border-box;
					left: 20px;
					background-image: url(./find.png);
					background-size: 1.5em 1.5em;
					background-position: center;
					background-repeat: no-repeat;
					background-color: #00cc44;
					transform: translateX(-50%) translateY(-25%);
					border-radius: 0.4rem;
					transition: 0.3s ease all;
				}
				&:hover::before {
					background-color: #00ee63;
				}
			}
			&.dtr-inline.collapsed > tbody > tr.parent :is(td.dtr-control, th.dtr-control) {
				&::before {
					background-color: #cc0000;
				}
				&:hover::before {
					background-color: #f70000;
				}
			}

			& tr.child > td.child {
				padding: 0;
				& > .slider {
					padding: 0.25rem 0.45rem;
					margin: 0.5rem 0.25rem 0.5rem 3rem;
					box-shadow: -0.5px 0.5px 2px rgb(0 0 0 / 25%);
					border-radius: 0.5rem;
					display: none;
				}
			}

			& .dtRowDetails {
				& tr {
					& > td {
						padding: 0.5rem;
						white-space: normal;
					}
					&:not(:last-child) {
						box-shadow: inset 0 -0.07rem 0 0 #cecece;
					}
				}
			}
		}
	}
}

.modal.dtFilter {
	& :is(.modal-header > button, [data-name="deleteField"], [data-name="addOperation"], [data-name="deleteOperation"]) {
		font-size: 1.5rem;
		color: #e90707;
		border: 0px;
		border-radius: 0.5rem;
		padding: 0rem 0.65rem;
		background-color: #f5f5f5;
		border-bottom: 0.1rem solid rgba(0, 0, 0, 0.25);
		transition: 0.3s ease all;
		&:hover {
			background-color: rgba(0, 0, 0, 0.1);
		}
	}
	& :is([data-name="addOperation"], [data-name="deleteOperation"]) {
		padding: 0rem 0.4rem;
	}

	& [data-name="addOperation"] {
		color: #23aa23 !important;
	}
	& [data-name="addFilter"] {
		@include flex-r("", center);
		column-gap: 0.5rem;
		font-weight: 600;
		margin: 0 auto;
		margin-top: 0.5rem;
		& > i {
			font-size: 1.5rem;
			color: #06aa4a;
		}
	}
	& .modal-body {
		& > fieldset {
			row-gap: 1rem;
			@include flex-c("", "");
			& > legend {
				height: 0px;
				float: unset;
				line-height: unset;
				width: 0px;
				padding: 0px;
			}
		}
	}
	& [data-name="filterCotainer"] {
		@include flex-c("", "");
		row-gap: 1rem;
		& > li {
			border: 1px solid rgba(0, 0, 0, 0.3);
			padding: 1rem 0 1rem 0;
			border-radius: 0.5rem;
			& > fieldset {
				@include flex-c("", "");
				row-gap: 1rem;
				& > legend {
					font-size: 1rem;
					font-weight: 600;
					padding-left: 1rem;
				}
				& > div {
					@include flex-r("", center);
					column-gap: 0.5rem;
					padding: 0 1rem;
				}
			}
		}
	}
	& [data-name="fieldOperations"] {
		@include flex-c("", "");
		row-gap: 0.5rem;
		padding: 0.5rem 1rem;
		border-top: 1px solid rgba(0, 0, 0, 0.3);
		border-radius: 0.5rem;
		& > li {
			display: grid;
			grid-template-columns: 1fr auto;
			justify-content: center;
			align-items: center;
			column-gap: 0.5rem;
			row-gap: 0.5rem;
			grid-template-areas:
				"select button"
				"value value";
			&:not(:last-child) {
				padding-bottom: 0.5rem;
				border-bottom: 1px solid rgba(0, 0, 0, 0.3);
			}
			& > select {
				grid-area: select;
			}
			& > button {
				grid-area: button;
			}
			& > input {
				grid-area: value;
			}
		}
	}
}

@media screen and (min-width: 767px) {
	.dtToolBar {
		grid-template-columns: auto 1fr auto auto auto;
		row-gap: unset;
		grid-auto-rows: unset;
		& > .dtAdd > span,
		& > .dtFilters > span,
		& > .dtExports > .dropdown-toggle > span {
			display: unset;
		}

		& > .dtInfo,
		& > .dataTables_filter,
		& > .dtAdd,
		& > .dtFilters,
		& > .dtExports {
			grid-area: unset;
		}

		& > .dtInfo {
			justify-content: unset;
		}

		& > .dtAdd,
		& > .dtFilters,
		& > .dtExports {
			justify-self: unset;
		}

		& > .dataTables_filter {
			justify-self: flex-end;
		}
	}

	.dataTables_wrapper .dataTables_paginate {
		justify-content: flex-end;
		& > span {
			& > .paginate_button {
				&:not(.current) {
					display: block;
				}
			}
			& > .ellipsis {
				display: block;
			}
		}
	}
}
